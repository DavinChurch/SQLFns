 trim←{rmv}∆dlt data;⎕IO;⎕ML;keep
⍝∇ <D>eletes <L>eading and <T>railing spaces
⍝∇ (or zeros/prototypes/∆dlt-prototypes) from the rows of any array.
⍝∇ A left argument may be specified with a vector of item values
⍝∇ to be removed instead of spaces/zeros/[∆dlt-]prototypes.
⍝ A "∆dlt-prototype", defined as the ∆dlt of the prototype,
⍝ is additionally removed when the data is nested.
⍝ For convenience, if both the left and right arguments are given as
⍝ simple (unnested) values, and their datatypes (character or numeric)
⍝ are different, then the right argument will be returned unchanged
⍝ (not even ravelled, as can otherwise be common for this function).
⍝ For instance, this allows the removal of spaces from each item
⍝ of a nested array without ravelling any numeric scalars that may
⍝ also be found in that array.
⍝
⍝ Last modified 10 October 2011 by Davin Church of Creative Software Design
⍝ Converted to Dyalog 12 October 2019 by Davin Church of Creative Software Design

 ⎕IO←⎕ML←1
 :If 0≠⎕NC'rmv' ⋄ :AndIf ~6∊10|⎕DR¨rmv data ⋄ :AndIf ≠/⊃¨0⍴¨rmv data
     trim←data ⋄ :Return ⍝ Different datatypes - return input unchanged
 :EndIf
 :If 0=⎕NC'rmv' ⋄ :AndIf 1<|≡rmv←1↑0⍴data ⋄ rmv←rmv,∆dlt¨rmv ⋄ :EndIf
 keep←~data∊rmv ⋄ keep←(∨\keep)∧⌽∨\⌽keep
 trim←+/keep ⋄ trim←trim∘.≥⍳⌈/0,,trim ⋄ trim←(⍴trim)⍴(,trim)\(,keep)/,data
